# -*- coding: utf-8 -*-
"""Untitled21.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18_88deZ5XFvCK-OCz_8G4E7WUckqmFYn
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix
from imblearn.over_sampling import SMOTE
from sklearn.preprocessing import MinMaxScaler
from sklearn.svm import SVC
import warnings
from collections import Counter
warnings.filterwarnings('ignore')
import seaborn as sns
import matplotlib.pyplot as plt
import joblib
import pickle

df=pd.read_csv('/content/bankloan.csv')
df=df.dropna()
df=df.drop('Loan_ID', axis=1)
column=[ 'Gender', 'Married', 'Education', 'Self_Employed', 'Credit_History','Property_Area' ]
Counter(df['Loan_Status'])
y=df['Loan_Status']
df=df.drop('Loan_Status', axis=1)
df=pd.get_dummies(df, columns=column)
df = df.replace({True: 1, False: 0})
sc=MinMaxScaler()
X=sc.fit_transform(df)
X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.2, random_state=42, shuffle=True)

scaler_filename = "scaler.pkl"
joblib.dump(sc, scaler_filename)
# instantiate classifier with linear kernel and C=1.0
linear_svc=SVC(kernel='linear', C=1.0)


# fit classifier to training set
linear_svc.fit(X_train,y_train)


# make predictions on test set
y_pred_test=linear_svc.predict(X_test)


# compute and print accuracy score
print('Model accuracy score with linear kernel and C=1.0 : {0:0.4f}'. format(accuracy_score(y_test, y_pred_test)))
cm=confusion_matrix(y_test, y_pred_test)
filename='loan_model.pkl'
joblib.dump(linear_svc,filename)